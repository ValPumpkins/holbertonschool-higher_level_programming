The 0-add_integer Module
=======================

    >>> add_integer = __import__("0-add_integer").add_integer

Usage:

    >>> print(add_integer(1, 2))
    3

    >>> print(add_integer(4))
    102

    >>> print(add_integer(100, -2))
    98

    >>> add_integer(2, -3)
    -1

    >>> add_integer(2.0, 3.0)
    5

    >>> print(add_integer(100.3, -2))
    98

    >>> print(add_integer(-4, -8))
    -12

    >>> print(add_integer(2+1, 3))
    6

    >>> print(add_integer(2437039853972085021, 1))
    2437039853972085022

Errors:

    >>> print(add_integer(4, "School"))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer("Holberton", "School"))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(None))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(1, "r"))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer(12, "!"))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer())
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> print(add_integer(float('inf')))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(5, None))
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> print(add_integer([10, 9], 3))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer('#', 4))
    Traceback (most recent call last):
    TypeError: a must be an integer
