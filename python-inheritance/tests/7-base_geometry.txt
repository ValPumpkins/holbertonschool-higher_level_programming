Base geometry integer validator
================================

Defines a base geometry class BaseGeometry

''integer_validator()'' returns True if a num is integer.

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

Usage:

    >>> bg.integer_validator("my_int", 42)

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("numbers", 2, 3)
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

    >>> bg.integer_validator(int('inf'), 2)
    Traceback (most recent call last):
    ValueError: invalid literal for int() with base 10: 'inf'

    >>> bg.integer_validator(None)
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator(None, "Didier")
    Traceback (most recent call last):
    TypeError: None must be an integer

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
